{"version":3,"sources":["constants/voteStatus.js","helpers/address.js","state.js","hooks/useWeb3.js","hooks/useWallet.js","hooks/useVoteState.js","hooks/useToggle.js","components/sections/Navbar.js","components/sections/Footer.js","components/sections/Layout.js","helpers/vote.js","helpers/Metamask.js","components/wallet/Identicon.js","components/wallet/ConnectButton.js","components/sections/Header.js","components/Modal.js","components/bloc/Voter.js","components/vote-steps/VotersRegistration.js","helpers/proposal.js","components/bloc/Proposal.js","components/vote-steps/ProposalsRegistration.js","components/vote-steps/VotingSession.js","components/vote-steps/VotesTallying.js","components/bloc/WinnerProposal.js","components/vote-steps/VoteResult.js","pages/Home.js","pages/Voters.js","pages/Proposals.js","App.js","components/Loading.js","index.js","components/Warning.js"],"names":["VoteStatus","Object","freeze","RegisteringVoters","ProposalsRegistrationStarted","ProposalsRegistrationEnded","VotingSessionStarted","VotingSessionEnded","VotesTallied","shortenAddress","address","slice","length","loggedInAccountAtom","atom","accountBalanceAtom","web3InstanceAtom","a","detectEthereumProvider","provider","web3","Web3","eth","handleRevert","votingContractAtom","get","net","getId","networkId","deployedNetwork","VotingContract","networks","Contract","abi","contractOwnerAtom","contract","methods","owner","call","rawVoteStatusAtom","voteStatusAtom","set","newStatus","Number","whiteListedVotersAtom","proposalsAtom","winningProposalAtom","voterDetailsAtom","isOwnerAtom","account","firstAddress","secondAddress","getAddress","TypeError","addressEqual","canSubmitProposalAtom","voteStatus","voterDetails","isRegistered","canVoteAtom","hasVoted","useWeb3","useAtomValue","setVoteStatus","useUpdateAtom","setWhiteListedVoters","setProposals","setVoterDetails","setWinningProposal","fetchVoteStatus","state","status","fetchVoters","getWhitelistedVoters","voters","fetchProposals","getProposals","proposals","fetchVoterDetails","callback","getVoterDetails","addVoter","errorCallback","send","from","endVotersRegistration","startProposalSession","addProposal","proposal","submitProposal","endProposalsRegistration","endProposalSession","startVotingSession","voteForProposal","selectedProposalId","fetchWinner","getProposalVoteCountEqualities","getWinner","winner","computeVoteResult","tallyingVotes","endVotingSession","onVoteStatusUpdate","contractEvent","returnValues","addEventListener","eventName","successCallback","events","on","console","error","useWallet","useAtom","setAccount","balance","setBalance","window","ethereum","request","method","getAccounts","accounts","getBalance","code","log","onAccountChange","alert","connectWallet","logOut","useVoteState","contractOwner","whiteListedVoters","canSubmitProposal","isOwner","canVote","winningProposal","useToggle","useState","setStatus","toggleStatus","useCallback","prevStatus","useMemo","Navbar","show","toggleMenuShow","className","href","type","onClick","to","Footer","Layout","props","children","getVoteStatusLabel","voteStatusMapping","getHumanErrorMessage","errorMessageToShow","message","errorMessageInJson","JSON","parse","data","keys","reason","StyledIdenticon","styled","div","Identicon","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","ConnectButton","parseFloat","formatEther","toFixed","Header","computeStepIcon","step","isVoteInProgress","Modal","title","closeCallback","formValid","saveCallback","document","body","style","overflow","tabIndex","role","Voter","voterData","votedProposalId","VotersRegistration","setAddress","transactionStatus","setTransactionStatus","toggleModalShow","newVoterAddress","voterAddress","successful","onAddVoterSubmit","onEndVotersRegistrationClick","isFormValid","isAddress","isValidAddress","includes","map","index","toString","forhtml","id","onChange","e","target","value","isValidProposal","RegExp","test","Proposal","description","voteCount","proposalId","voteCallback","ProposalRegistration","voterProposal","setVoterProposal","newProposalId","onAddProposalSubmit","onEndProposalRegistrationClick","VotingSession","setSelectedProposalId","canStartVote","canEndVote","voter","onStartVotingSession","onVoteForProposalSubmit","onEndVotingSessionClick","VotesTallying","onComputeVoteResultClick","WinnerProposal","VoteResult","Home","contentMapping","Voters","App","onChainChange","location","reload","removeListener","accountsChanged","path","element","Loading","ReactDOM","render","fallback","FallbackComponent","getElementById"],"mappings":"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","file":"static/js/main.83554ced.chunk.js","sourcesContent":["export const VoteStatus = Object.freeze({\n    RegisteringVoters: 0,\n    ProposalsRegistrationStarted: 1,\n    ProposalsRegistrationEnded: 2,\n    VotingSessionStarted: 3,\n    VotingSessionEnded: 4,\n    VotesTallied: 5,\n})\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { getAddress, isAddress } from '@ethersproject/address'\n\nexport const shortenAddress = (address) => {\n    if (!address) {\n        return '-'\n    }\n\n    return `${address.slice(0, 6)}...${address.slice(address.length - 4, address.length)}`\n}\n\nexport function compareAddress(firstAddress, secondAddress) {\n    try {\n        const parsedFirstAddress = BigNumber.from(firstAddress)\n        const parsedSecondAddress = BigNumber.from(secondAddress)\n\n        if (parsedFirstAddress.gt(parsedSecondAddress)) {\n            return 1\n        }\n\n        if (parsedFirstAddress.lt(parsedSecondAddress)) {\n            return -1\n        }\n\n        return 0\n    } catch {\n        throw new TypeError(\"Invalid input, address can't be parsed\")\n    }\n}\n\nexport function addressEqual(firstAddress, secondAddress) {\n    if (firstAddress === null || secondAddress === null) {\n        return false\n    }\n\n    try {\n        return getAddress(firstAddress) === getAddress(secondAddress)\n    } catch {\n        throw new TypeError(\"Invalid input, address can't be parsed\")\n    }\n}\n\nexport function isValidAddress(address) {\n    return isAddress(address)\n}\n","import { atom } from 'jotai'\n\nimport Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport VotingContract from './contracts/Voting.json'\n\nimport { VoteStatus } from './constants/voteStatus'\n\nimport { addressEqual } from './helpers/address'\n\nexport const loggedInAccountAtom = atom(null)\nexport const accountBalanceAtom = atom(0)\n\nexport const web3InstanceAtom = atom(async () => {\n    const provider = await detectEthereumProvider()\n\n    // Get network provider and web3 instance.\n    const web3 = new Web3(provider)\n    web3.eth.handleRevert = true\n\n    return web3\n})\n\nexport const votingContractAtom = atom(async (get) => {\n    const web3 = get(web3InstanceAtom)\n    const networkId = await web3.eth.net.getId()\n    const deployedNetwork = VotingContract.networks[networkId]\n\n    return new web3.eth.Contract(VotingContract.abi, deployedNetwork && deployedNetwork.address)\n})\n\nexport const contractOwnerAtom = atom(async (get) => {\n    const contract = get(votingContractAtom)\n\n    return await contract.methods.owner().call()\n})\n\nconst rawVoteStatusAtom = atom(null)\nexport const voteStatusAtom = atom(\n    (get) => get(rawVoteStatusAtom),\n    (get, set, newStatus) => {\n        set(rawVoteStatusAtom, Number(newStatus))\n    },\n)\n\nexport const whiteListedVotersAtom = atom([])\n\nexport const proposalsAtom = atom([])\n\nexport const winningProposalAtom = atom(null)\n\nexport const voterDetailsAtom = atom(null)\n\nexport const isOwnerAtom = atom((get) => {\n    const contract = get(contractOwnerAtom)\n    const account = get(loggedInAccountAtom)\n\n    if (contract === null || account === null) {\n        return false\n    }\n\n    return addressEqual(contract, account)\n})\n\nexport const canSubmitProposalAtom = atom((get) => {\n    const voteStatus = get(voteStatusAtom)\n    const voterDetails = get(voterDetailsAtom)\n\n    if (voteStatus === null || voterDetails === null) {\n        return false\n    }\n\n    return voteStatus === VoteStatus.ProposalsRegistrationStarted && voterDetails.isRegistered\n})\n\nexport const canVoteAtom = atom((get) => {\n    const voteStatus = get(voteStatusAtom)\n    const voterDetails = get(voterDetailsAtom)\n\n    if (voteStatus === null || voterDetails === null) {\n        return false\n    }\n\n    return (\n        voteStatus === VoteStatus.VotingSessionStarted &&\n        voterDetails.isRegistered &&\n        voterDetails.hasVoted === false\n    )\n})\n","import { useAtomValue, useUpdateAtom } from 'jotai/utils'\n\nimport {\n    votingContractAtom,\n    voteStatusAtom,\n    whiteListedVotersAtom,\n    proposalsAtom,\n    voterDetailsAtom,\n    winningProposalAtom,\n} from '../state'\n\nconst useWeb3 = () => {\n    const contract = useAtomValue(votingContractAtom)\n\n    const setVoteStatus = useUpdateAtom(voteStatusAtom)\n    const setWhiteListedVoters = useUpdateAtom(whiteListedVotersAtom)\n    const setProposals = useUpdateAtom(proposalsAtom)\n    const setVoterDetails = useUpdateAtom(voterDetailsAtom)\n    const setWinningProposal = useUpdateAtom(winningProposalAtom)\n\n    const addEventListener = (eventName, successCallback) => {\n        contract.events[eventName]({}).on('data', successCallback).on('error', console.error)\n    }\n\n    const fetchVoteStatus = async () => {\n        const status = await contract.methods.state().call()\n        setVoteStatus(status)\n    }\n\n    const fetchVoters = async () => {\n        const voters = await contract.methods.getWhitelistedVoters().call()\n        setWhiteListedVoters(voters)\n    }\n\n    const fetchProposals = async () => {\n        const proposals = await contract.methods.getProposals().call()\n        setProposals(proposals)\n    }\n\n    /**\n     * @param string account\n     * @param function callback if present, it means we just want to use the response for another context\n     * @returns\n     */\n    const fetchVoterDetails = async (account, callback = null) => {\n        const voterDetails = await contract.methods.getVoterDetails(account).call()\n\n        if (callback) {\n            callback(voterDetails)\n            return\n        }\n\n        setVoterDetails(voterDetails)\n    }\n\n    const addVoter = async (address, account, errorCallback) => {\n        try {\n            await contract.methods.addVoter(address).send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const endVotersRegistration = async (account, errorCallback) => {\n        try {\n            await contract.methods.startProposalSession().send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const addProposal = async (proposal, account, errorCallback) => {\n        try {\n            await contract.methods.submitProposal(proposal).send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const endProposalsRegistration = async (account, errorCallback) => {\n        try {\n            await contract.methods.endProposalSession().send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const startVotingSession = async (account, errorCallback) => {\n        try {\n            await contract.methods.startVotingSession().send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const voteForProposal = async (selectedProposalId, account, errorCallback) => {\n        try {\n            await contract.methods.voteForProposal(selectedProposalId).send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const fetchWinner = async () => {\n        const proposalVoteCountEqualities = await contract.methods\n            .getProposalVoteCountEqualities()\n            .call()\n\n        if (proposalVoteCountEqualities.length > 0) {\n            return\n        }\n\n        const winner = await contract.methods.getWinner().call()\n        setWinningProposal(winner)\n    }\n\n    const computeVoteResult = async (account, errorCallback) => {\n        try {\n            await contract.methods.tallyingVotes().send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const endVotingSession = async (account, errorCallback) => {\n        try {\n            await contract.methods.endVotingSession().send({ from: account })\n        } catch (error) {\n            errorCallback(error)\n        }\n    }\n\n    const onVoteStatusUpdate = async (contractEvent) => {\n        setVoteStatus(contractEvent.returnValues.newStatus)\n    }\n\n    return {\n        addEventListener,\n        fetchVoteStatus,\n        fetchVoters,\n        fetchProposals,\n        fetchVoterDetails,\n        fetchWinner,\n        addVoter,\n        endVotersRegistration,\n        addProposal,\n        endProposalsRegistration,\n        startVotingSession,\n        voteForProposal,\n        endVotingSession,\n        computeVoteResult,\n        onVoteStatusUpdate,\n    }\n}\n\nexport default useWeb3\n","import { useAtom } from 'jotai'\nimport { useAtomValue } from 'jotai/utils'\n\nimport { web3InstanceAtom, loggedInAccountAtom, accountBalanceAtom } from '../state'\n\nconst useWallet = () => {\n    const web3 = useAtomValue(web3InstanceAtom)\n    const [account, setAccount] = useAtom(loggedInAccountAtom)\n    const [balance, setBalance] = useAtom(accountBalanceAtom)\n\n    async function connectWallet() {\n        try {\n            // ethereum.enable(); (DEPRECATED), do instead :\n            // @link https://docs.metamask.io/guide/ethereum-provider.html#ethereum-enable-deprecated\n            // why returned accounts are lower cased ?\n            // @link https://github.com/MetaMask/metamask-extension/issues/10671\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\n\n            const accounts = await web3.eth.getAccounts()\n            const balance = await web3.eth.getBalance(accounts[0])\n\n            setAccount(accounts[0])\n            setBalance(balance)\n        } catch (err) {\n            if (err.code === 4001) {\n                // EIP-1193 userRejectedRequest error\n                // If this happens, the user rejected the connection request.\n                console.log('Please connect to MetaMask.')\n            } else if (err.code === -32002) {\n                console.log('Please unlock MetaMask.')\n            } else {\n                console.error(err)\n            }\n        }\n    }\n\n    const onAccountChange = async (accounts) => {\n        if (accounts.length === 0) {\n            // MetaMask is locked or the user has not connected any accounts\n            alert('Please connect to MetaMask.')\n        } else if (accounts[0] !== account) {\n            const balance = await web3.eth.getBalance(accounts[0])\n\n            setAccount(accounts[0])\n            setBalance(balance)\n        }\n    }\n\n    function logOut() {\n        setAccount(null)\n        setBalance(null)\n    }\n\n    return {\n        web3,\n        account,\n        balance,\n        connectWallet,\n        onAccountChange,\n        logOut,\n    }\n}\n\nexport default useWallet\n","import { useAtomValue } from 'jotai/utils'\n\nimport {\n    contractOwnerAtom,\n    voteStatusAtom,\n    whiteListedVotersAtom,\n    isOwnerAtom,\n    proposalsAtom,\n    canSubmitProposalAtom,\n    voterDetailsAtom,\n    canVoteAtom,\n    winningProposalAtom,\n} from '../state'\n\nconst useVoteState = () => {\n    const contractOwner = useAtomValue(contractOwnerAtom)\n    const voteStatus = useAtomValue(voteStatusAtom)\n    const whiteListedVoters = useAtomValue(whiteListedVotersAtom)\n    const proposals = useAtomValue(proposalsAtom)\n    const canSubmitProposal = useAtomValue(canSubmitProposalAtom)\n    const isOwner = useAtomValue(isOwnerAtom)\n    const voterDetails = useAtomValue(voterDetailsAtom)\n    const canVote = useAtomValue(canVoteAtom)\n    const winningProposal = useAtomValue(winningProposalAtom)\n\n    return {\n        contractOwner,\n        voteStatus,\n        whiteListedVoters,\n        proposals,\n        canSubmitProposal,\n        isOwner,\n        voterDetails,\n        canVote,\n        winningProposal,\n    }\n}\n\nexport default useVoteState\n","import { useState, useCallback, useMemo } from 'react'\n\nconst useToggle = () => {\n    const [status, setStatus] = useState(false)\n\n    const toggleStatus = useCallback(() => {\n        setStatus((prevStatus) => !prevStatus)\n    }, [])\n\n    const values = useMemo(\n        () => ({\n            status,\n            toggleStatus,\n        }),\n        [status, toggleStatus],\n    )\n\n    return values\n}\n\nexport default useToggle\n","import { Link } from 'react-router-dom'\n\nimport useToggle from '../../hooks/useToggle'\n\nexport default function Navbar() {\n    // Handle responsive menu\n    const { status: show, toggleStatus: toggleMenuShow } = useToggle()\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container px-lg-5\">\n                <a className=\"navbar-brand\" href=\"#!\">\n                    Alyra Voting\n                </a>\n                <button\n                    className={`navbar-toggler ${!show && 'collapsed'}`}\n                    type=\"button\"\n                    onClick={() => toggleMenuShow()}\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className={`collapse navbar-collapse ${show && 'show'}`}>\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/voters\" className=\"nav-link\">\n                                Voters\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/proposals\" className=\"nav-link\">\n                                Proposals\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","export default function Footer() {\n    return (\n        <footer className=\"py-5 bg-dark\">\n            <div className=\"container\">\n                <p className=\"m-0 text-center text-white\">Copyright &copy; Alyra voting 2021</p>\n            </div>\n        </footer>\n    )\n}\n","import React from 'react'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nexport default function Layout(props) {\n    return (\n        <>\n            <Navbar />\n            {props.children}\n            <Footer />\n        </>\n    )\n}\n","import { VoteStatus } from '../constants/voteStatus'\n\nexport const getVoteStatusLabel = (voteStatus) => {\n    const voteStatusMapping = {}\n    voteStatusMapping[VoteStatus.RegisteringVoters] = 'Voters registration'\n    voteStatusMapping[VoteStatus.ProposalsRegistrationStarted] =\n        'Proposals registration in progress'\n    voteStatusMapping[VoteStatus.ProposalsRegistrationEnded] = 'Proposals registration over'\n    voteStatusMapping[VoteStatus.VotingSessionStarted] = 'Voting session in progress'\n    voteStatusMapping[VoteStatus.VotingSessionEnded] = 'Voting session over'\n    voteStatusMapping[VoteStatus.VotesTallied] = 'Vote result'\n\n    return voteStatusMapping[voteStatus]\n}\n","export const isMetaMaskInstalled = () => {\n    //Have to check the ethereum binding on the window object to see if it's installed\n    const { ethereum } = window\n    return Boolean(ethereum && ethereum.isMetaMask)\n}\n\nexport const getHumanErrorMessage = (error) => {\n    let errorMessageToShow = error.message\n\n    // Apparently it is still tricky to get a proper revert reason\n    // @link https://stackoverflow.com/questions/66878031/how-to-properly-use-revert-reason-in-web3-js-to-show-meaningful-error-message-in\n    if (error.code === -32603) {\n        const errorMessageInJson = JSON.parse(error.message.slice(58, error.message.length - 2))\n\n        errorMessageToShow =\n            errorMessageInJson.data.data[Object.keys(errorMessageInJson.data.data)[0]].reason\n    }\n\n    return errorMessageToShow\n}\n","import { useEffect, useRef } from 'react'\nimport Jazzicon from '@metamask/jazzicon'\nimport styled from '@emotion/styled'\n\nconst StyledIdenticon = styled.div`\n    height: 1rem;\n    width: 1rem;\n    border-radius: 1.125rem;\n    background-color: black;\n`\n\nexport default function Identicon({ account }) {\n    const ref = useRef()\n\n    useEffect(() => {\n        if (account && ref.current) {\n            ref.current.innerHTML = ''\n            ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\n        }\n    }, [account])\n\n    return <StyledIdenticon ref={ref} />\n}\n","import { formatEther } from '@ethersproject/units'\nimport Identicon from './Identicon'\n\nimport useWallet from '../../hooks/useWallet'\n\nexport default function ConnectButton() {\n    const { account, balance, connectWallet } = useWallet()\n\n    return account ? (\n        <div className=\"wallet-box\">\n            <div className=\"wb_account-balance\">\n                <p>{balance && parseFloat(formatEther(balance)).toFixed(3)} ETH</p>\n            </div>\n\n            <div className=\"wb_account-address\">\n                <p>\n                    {account &&\n                        `${account.slice(0, 6)}...${account.slice(\n                            account.length - 4,\n                            account.length,\n                        )}`}\n                </p>\n                <Identicon account={account} />\n            </div>\n        </div>\n    ) : (\n        <button onClick={connectWallet} className=\"wallet-connect\">\n            Connect to wallet\n        </button>\n    )\n}\n","import useVoteState from '../../hooks/useVoteState'\n\nimport ConnectButton from '../wallet/ConnectButton'\n\nimport { getVoteStatusLabel } from '../../helpers/vote'\nimport { VoteStatus } from '../../constants/voteStatus'\n\nexport default function Header() {\n    const { voteStatus } = useVoteState()\n\n    const computeStepIcon = (step) => {\n        if (step === voteStatus) {\n            return 'bi-arrow-repeat gly-spin'\n        }\n\n        return voteStatus >= step ? 'bi-check-circle-fill' : 'bi-check-circle'\n    }\n\n    const isVoteInProgress = voteStatus < VoteStatus.VotesTallied\n\n    return (\n        <header className=\"py-5\">\n            <div className=\"container px-lg-5\">\n                <div className=\"py-3 bg-light rounded-3 text-center\">\n                    <div className=\"m-md-5 m-3\">\n                        <h1 className=\"display-6 fw-bold\">\n                            Welcome to the annual company meeting !\n                        </h1>\n                        <p className=\"fs-5 mb-5\">\n                            In order to enhance the Firm’s relationship with its employees, everyone\n                            who are remotely registered to the annual meeting will be able to vote\n                            by using our new decentralized application.\n                        </p>\n\n                        {isVoteInProgress && <ConnectButton />}\n\n                        <ul className=\"list-group list-group-horizontal-sm vote-stepper\">\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(0)}`}></i>\n                                <span>{getVoteStatusLabel(0)}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(1)}`}></i>\n                                <span>{getVoteStatusLabel(1)}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(2)}`}></i>\n                                <span>{getVoteStatusLabel(2)}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(3)}`}></i>\n                                <span>{getVoteStatusLabel(3)}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(4)}`}></i>\n                                <span>{getVoteStatusLabel(4)}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                <i className={`bi ${computeStepIcon(5)}`}></i>\n                                <span>{getVoteStatusLabel(5)}</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n}\n","import { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Modal = ({ children, show, title, closeCallback, formValid, saveCallback }) => {\n    useEffect(() => {\n        // prevent body scroll while modal opened\n        document.body.style.overflow = show ? 'hidden' : 'unset'\n    }, [show])\n\n    return (\n        <div className={`modal ${show ? ' modal-show' : ''}`} tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">{title}</h5>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                            onClick={closeCallback}\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">{children}</div>\n                    <div className=\"modal-footer\">\n                        <button\n                            type=\"button\"\n                            className={`btn btn-primary ${!formValid && 'disabled'}`}\n                            onClick={saveCallback}\n                        >\n                            Save\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary\"\n                            data-dismiss=\"modal\"\n                            onClick={closeCallback}\n                        >\n                            Close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    closeCallback: PropTypes.func.isRequired,\n    formValid: PropTypes.bool.isRequired,\n    saveCallback: PropTypes.func.isRequired,\n}\n\nexport default Modal\n","import PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWeb3 from '../../hooks/useWeb3'\n\nimport { shortenAddress } from '../../helpers/address'\nimport { VoteStatus } from '../../constants/voteStatus'\n\nconst Voter = ({ address }) => {\n    // Global state\n    const { voteStatus } = useVoteState()\n    const { fetchVoterDetails } = useWeb3()\n\n    // local state\n    const [voterDetails, setVoterDetails] = useState(null)\n\n    useEffect(() => {\n        if (voteStatus < VoteStatus.VotingSessionEnded) {\n            return\n        }\n\n        fetchVoterDetails(address, (voterData) => {\n            setVoterDetails(voterData)\n        })\n    }, [voteStatus, address])\n\n    return (\n        <div className=\"col-lg-6 col-xxl-4 mb-5\">\n            <div className=\"card bg-light border-0 h-100\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center p-4 p-lg-5 pt-0 pt-lg-0\">\n                    <div className=\"feature bg-dark bg-gradient text-white rounded-3 mb-4 mt-n4\">\n                        <i className=\"bi bi-person-circle\"></i>\n                    </div>\n                    <h3>{shortenAddress(address)}</h3>\n                    {voterDetails?.votedProposalId && (\n                        <h4 className=\"fs-6\">\n                            <b>Vote</b> : Proposal #{voterDetails.votedProposalId}\n                        </h4>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nVoter.propTypes = {\n    address: PropTypes.string.isRequired,\n}\n\nexport default Voter\n","import { useState, useEffect } from 'react'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWallet from '../../hooks/useWallet'\nimport useWeb3 from '../../hooks/useWeb3'\nimport useToggle from '../../hooks/useToggle'\n\nimport { isValidAddress, shortenAddress } from '../../helpers/address'\nimport { getVoteStatusLabel } from '../../helpers/vote'\nimport { getHumanErrorMessage } from '../../helpers/Metamask'\n\nimport Header from '../sections/Header'\nimport Modal from '../Modal'\nimport Voter from '../bloc/Voter'\n\nexport default function VotersRegistration() {\n    // Global state\n    const { isOwner, voteStatus, whiteListedVoters } = useVoteState()\n    const { addEventListener, fetchVoters, addVoter, endVotersRegistration, onVoteStatusUpdate } =\n        useWeb3()\n    const { account } = useWallet()\n\n    // local state\n    const [address, setAddress] = useState('')\n    const [transactionStatus, setTransactionStatus] = useState(null)\n    // Handle modal display\n    const { status: show, toggleStatus: toggleModalShow } = useToggle()\n\n    // Fetch voters\n    useEffect(() => {\n        fetchVoters()\n    }, [])\n\n    // Listen contract events :\n    // - \"VoterRegistered\" : to confirm the registration of a new voter\n    // - \"WorkflowStatusChange\" : to update the vote status\n    useEffect(() => {\n        addEventListener('VoterRegistered', async (contractEvent) => {\n            const newVoterAddress = contractEvent.returnValues.voterAddress\n            const transactionStatus = {\n                successful: true,\n                message: `Voter ${shortenAddress(\n                    newVoterAddress,\n                )} has been successfully registered.`,\n            }\n\n            fetchVoters()\n\n            setAddress('')\n            setTransactionStatus(transactionStatus)\n        })\n\n        addEventListener('WorkflowStatusChange', onVoteStatusUpdate)\n    }, [])\n\n    const onAddVoterSubmit = async () => {\n        await addVoter(address, account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onEndVotersRegistrationClick = async () => {\n        if (whiteListedVoters.length < 2) {\n            return\n        }\n\n        endVotersRegistration(account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const isFormValid = () => {\n        if (!isValidAddress(address)) {\n            return false\n        }\n\n        if (whiteListedVoters.includes(address)) {\n            console.log('coucou')\n            return false\n        }\n\n        return true\n    }\n\n    const onModalClose = () => {\n        // reset local state\n        setAddress('')\n        setTransactionStatus(null)\n\n        // ... and hide modal\n        toggleModalShow()\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"content\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">{getVoteStatusLabel(voteStatus)}</h2>\n\n                    {isOwner && (\n                        <div className=\"btn-toolbar admin-toolbar\">\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={toggleModalShow}\n                                >\n                                    Add voter\n                                </button>\n                            </div>\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className={`btn btn-success ${\n                                        !isOwner || (whiteListedVoters.length < 2 && 'disabled')\n                                    }`}\n                                    onClick={onEndVotersRegistrationClick}\n                                >\n                                    Start proposals registration\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    <div className=\"row gx-lg-5 my-5\">\n                        {whiteListedVoters.length ? (\n                            whiteListedVoters.map((address, index) => (\n                                <Voter key={index.toString()} address={address} />\n                            ))\n                        ) : (\n                            <p className=\"text-center fs-3\">No voter yet.</p>\n                        )}\n                    </div>\n                </div>\n\n                <Modal\n                    show={show}\n                    title=\"Add new voter\"\n                    closeCallback={onModalClose}\n                    formValid={isFormValid()}\n                    saveCallback={onAddVoterSubmit}\n                >\n                    {transactionStatus && (\n                        <div\n                            className={`alert ${\n                                transactionStatus.successful ? 'alert-success' : 'alert-danger'\n                            }`}\n                            role=\"alert\"\n                        >\n                            {transactionStatus.message}\n                        </div>\n                    )}\n\n                    <form>\n                        <div className=\"mb-3\">\n                            <label forhtml=\"voterAddress\" className=\"form-label\">\n                                ETH address\n                            </label>\n                            <div className=\"input-group has-validation\">\n                                <input\n                                    type=\"text\"\n                                    className={`form-control ${\n                                        address && (isFormValid() ? 'is-valid' : 'is-invalid')\n                                    }`}\n                                    id=\"voterAddress\"\n                                    onChange={(e) => setAddress(e.target.value)}\n                                    value={address}\n                                />\n                                {address &&\n                                    (isFormValid() ? (\n                                        <div className=\"valid-feedback\">Looks good!</div>\n                                    ) : (\n                                        <div className=\"invalid-feedback\">\n                                            Please choose a valid ETH address or check if voter is\n                                            already added.\n                                        </div>\n                                    ))}\n                            </div>\n                        </div>\n                    </form>\n                </Modal>\n            </section>\n        </>\n    )\n}\n","export function isValidProposal(proposal) {\n    // Prevent falsy value\n    if (!proposal) {\n        return false\n    }\n\n    // Only allow alphanumeric characters and spaces\n    const regex = new RegExp('^[a-zA-Z0-9_ ]*$')\n    if (!regex.test(proposal)) {\n        return false\n    }\n\n    return proposal.length > 5 && proposal.length <= 60\n}\n","import PropTypes from 'prop-types'\n\nconst Proposal = ({\n    description,\n    voteCount = 0,\n    proposalId = 0,\n    voteCallback,\n    canVote = false,\n}) => {\n    return (\n        <div className=\"col-lg-6 col-xxl-4 mb-5\">\n            <div className=\"card bg-light border-0 h-100\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center p-4 p-lg-5 pt-0 pt-lg-0\">\n                    <div className=\"feature bg-gradient text-white rounded-3 mb-4 mt-n4 bg-dark\">\n                        <i className=\"bi bi-file-earmark-text\"></i>\n                    </div>\n                    {canVote && (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary mb-3\"\n                            onClick={voteCallback}\n                        >\n                            Vote\n                        </button>\n                    )}\n\n                    <h3>Proposal #{proposalId}</h3>\n\n                    {voteCount && (\n                        <h4 className=\"fs-6\">\n                            <b>Vote count</b>: {voteCount}\n                        </h4>\n                    )}\n\n                    <h4 className=\"fs-6\">\n                        <b>Description</b>: {description}\n                    </h4>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nProposal.propTypes = {\n    description: PropTypes.string.isRequired,\n    voteCount: PropTypes.string,\n    proposalId: PropTypes.number,\n    voteCallback: PropTypes.func,\n    canVote: PropTypes.bool,\n}\n\nexport default Proposal\n","import { useState, useEffect } from 'react'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWeb3 from '../../hooks/useWeb3'\n\nimport useToggle from '../../hooks/useToggle'\nimport useWallet from '../../hooks/useWallet'\n\nimport { isValidProposal } from '../../helpers/proposal'\nimport { getVoteStatusLabel } from '../../helpers/vote'\nimport { getHumanErrorMessage } from '../../helpers/Metamask'\n\nimport Header from '../sections/Header'\nimport Modal from '../Modal'\nimport Proposal from '../bloc/Proposal'\n\nexport default function ProposalRegistration() {\n    // Global state\n    const { isOwner, voteStatus, proposals, canSubmitProposal } = useVoteState()\n    const {\n        addEventListener,\n        fetchProposals,\n        addProposal,\n        endProposalsRegistration,\n        fetchVoterDetails,\n        onVoteStatusUpdate,\n    } = useWeb3()\n    const { account } = useWallet()\n\n    // local state\n    const [voterProposal, setVoterProposal] = useState('')\n    const [transactionStatus, setTransactionStatus] = useState(null)\n    // Handle modal display\n    const { status: show, toggleStatus: toggleModalShow } = useToggle()\n\n    // Fetch proposals\n    useEffect(() => {\n        fetchProposals()\n    }, [])\n\n    // Fetch voter details\n    useEffect(() => {\n        if (account === null) {\n            return\n        }\n\n        fetchVoterDetails(account)\n    }, [account])\n\n    // Listen contract events :\n    // - \"ProposalRegistered\" : to confirm the registration of a new proposal\n    // - \"WorkflowStatusChange\" : to update the vote status\n    useEffect(() => {\n        addEventListener('ProposalRegistered', async (contractEvent) => {\n            const newProposalId = contractEvent.returnValues.proposalId\n            const transactionStatus = {\n                successful: true,\n                message: `Proposal #${newProposalId} has been successfully registered.`,\n            }\n\n            fetchProposals()\n\n            setVoterProposal('')\n            setTransactionStatus(transactionStatus)\n        })\n\n        addEventListener('WorkflowStatusChange', onVoteStatusUpdate)\n    }, [])\n\n    const onAddProposalSubmit = async () => {\n        await addProposal(voterProposal, account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onEndProposalRegistrationClick = async () => {\n        if (proposals.length < 2) {\n            return\n        }\n\n        endProposalsRegistration(account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onModalClose = () => {\n        // reset local state\n        setVoterProposal('')\n        setTransactionStatus(null)\n\n        // ... and hide modal\n        toggleModalShow()\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"content\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">{getVoteStatusLabel(voteStatus)}</h2>\n\n                    {account && (\n                        <div className=\"btn-toolbar admin-toolbar\">\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className={`btn btn-primary ${\n                                        !canSubmitProposal && 'disabled'\n                                    }`}\n                                    onClick={toggleModalShow}\n                                >\n                                    Add proposal\n                                </button>\n                            </div>\n                            {isOwner && (\n                                <div className=\"btn-group me-2\">\n                                    <button\n                                        type=\"button\"\n                                        className={`btn btn-danger ${\n                                            !isOwner || (proposals.length < 2 && 'disabled')\n                                        }`}\n                                        onClick={onEndProposalRegistrationClick}\n                                    >\n                                        End proposals registration\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                    )}\n\n                    <div className=\"row gx-lg-5 my-5\">\n                        {proposals.length ? (\n                            proposals.map((proposal, index) => (\n                                <Proposal\n                                    key={index.toString()}\n                                    proposalId={index}\n                                    description={proposal.description}\n                                    voteCount={proposal.voteCount}\n                                />\n                            ))\n                        ) : (\n                            <p className=\"text-center fs-3\">No proposal yet.</p>\n                        )}\n                    </div>\n                </div>\n\n                <Modal\n                    show={show}\n                    title=\"Add new proposal\"\n                    closeCallback={onModalClose}\n                    formValid={isValidProposal(voterProposal)}\n                    saveCallback={onAddProposalSubmit}\n                >\n                    {transactionStatus && (\n                        <div\n                            className={`alert ${\n                                transactionStatus.successful ? 'alert-success' : 'alert-danger'\n                            }`}\n                            role=\"alert\"\n                        >\n                            {transactionStatus.message}\n                        </div>\n                    )}\n\n                    <form>\n                        <div className=\"mb-3\">\n                            <label forhtml=\"proposal\" className=\"form-label\">\n                                Proposal content ({voterProposal.length} / 60)\n                            </label>\n                            <div className=\"input-group has-validation\">\n                                <input\n                                    type=\"text\"\n                                    className={`form-control ${\n                                        isValidProposal(voterProposal) ? 'is-valid' : 'is-invalid'\n                                    }`}\n                                    id=\"proposal\"\n                                    onChange={(e) => setVoterProposal(e.target.value)}\n                                    value={voterProposal}\n                                />\n                                {isValidProposal(voterProposal) ? (\n                                    <div className=\"valid-feedback\">Looks good!</div>\n                                ) : (\n                                    <div className=\"invalid-feedback\">\n                                        Please write a valid proposal (alphanumeric characters and\n                                        between 5 and 60 characters).\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </form>\n                </Modal>\n            </section>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\n\nimport Header from '../sections/Header'\nimport Modal from '../Modal'\nimport Proposal from '../bloc/Proposal'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWeb3 from '../../hooks/useWeb3'\nimport useWallet from '../../hooks/useWallet'\nimport useToggle from '../../hooks/useToggle'\n\nimport { VoteStatus } from '../../constants/voteStatus'\n\nimport { getVoteStatusLabel } from '../../helpers/vote'\nimport { getHumanErrorMessage } from '../../helpers/Metamask'\n\nexport default function VotingSession() {\n    // Global state\n    const { isOwner, voteStatus, proposals, voterDetails, canVote } = useVoteState()\n    const {\n        addEventListener,\n        fetchProposals,\n        fetchVoterDetails,\n        startVotingSession,\n        voteForProposal,\n        endVotingSession,\n        onVoteStatusUpdate,\n    } = useWeb3()\n    const { account } = useWallet()\n\n    // local state\n    const [selectedProposalId, setSelectedProposalId] = useState(null)\n    const [transactionStatus, setTransactionStatus] = useState(null)\n\n    // Handle modal display\n    const { status: show, toggleStatus: toggleModalShow } = useToggle()\n\n    // Fetch proposals\n    useEffect(() => {\n        fetchProposals()\n    }, [])\n\n    // Fetch voter details\n    useEffect(() => {\n        if (account === null) {\n            return\n        }\n\n        fetchVoterDetails(account)\n    }, [account])\n\n    // Admin flags to manage vote status\n    const canStartVote = voteStatus === VoteStatus.ProposalsRegistrationEnded\n    const canEndVote = voteStatus === VoteStatus.VotingSessionStarted\n\n    // Listen contract events :\n    // - \"ProposalRegistered\" : to confirm the registration of a new proposal\n    // - \"WorkflowStatusChange\" : to update the vote status\n    useEffect(() => {\n        addEventListener('Voted', async (contractEvent) => {\n            const votedProposalId = contractEvent.returnValues.proposalId\n            const voter = contractEvent.returnValues.voter\n            const transactionStatus = {\n                successful: true,\n                message: `Vote for proposal #${votedProposalId} has been successfully registered.`,\n            }\n\n            fetchVoterDetails(voter)\n\n            setSelectedProposalId(null)\n            setTransactionStatus(transactionStatus)\n        })\n\n        addEventListener('WorkflowStatusChange', onVoteStatusUpdate)\n    }, [])\n\n    const onStartVotingSession = async () => {\n        await startVotingSession(account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onVoteForProposalSubmit = async () => {\n        await voteForProposal(selectedProposalId, account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onEndVotingSessionClick = async () => {\n        endVotingSession(account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    const onModalOpen = (proposalId) => {\n        // Save select proposal Id\n        setSelectedProposalId(proposalId)\n\n        // ... and open modal for confirm vote\n        toggleModalShow()\n    }\n\n    const onModalClose = () => {\n        // reset local state\n        setSelectedProposalId(null)\n        setTransactionStatus(null)\n\n        // ... and hide modal\n        toggleModalShow()\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"content\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">{getVoteStatusLabel(voteStatus)}</h2>\n\n                    {isOwner && (\n                        <div className=\"btn-toolbar admin-toolbar\">\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className={`btn btn-success ${!canStartVote && 'disabled'}`}\n                                    onClick={onStartVotingSession}\n                                >\n                                    Start voting session\n                                </button>\n                            </div>\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className={`btn btn-danger ${!canEndVote && 'disabled'}`}\n                                    onClick={onEndVotingSessionClick}\n                                >\n                                    End voting session\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {voterDetails && voterDetails.hasVoted && (\n                        <div className=\"alert alert-success mt-3\" role=\"alert\">\n                            Congratulation ! Your vote has been registered.\n                        </div>\n                    )}\n\n                    <div className=\"row gx-lg-5 my-5\">\n                        {proposals.length ? (\n                            proposals.map((proposal, index) => (\n                                <Proposal\n                                    key={index.toString()}\n                                    proposalId={index}\n                                    description={proposal.description}\n                                    voteCallback={() => onModalOpen(index)}\n                                    canVote={canVote}\n                                />\n                            ))\n                        ) : (\n                            <p className=\"text-center fs-3\">No proposal yet.</p>\n                        )}\n                    </div>\n                </div>\n\n                <Modal\n                    show={show}\n                    title=\"Vote confirmation\"\n                    closeCallback={onModalClose}\n                    formValid={selectedProposalId !== null}\n                    saveCallback={onVoteForProposalSubmit}\n                >\n                    {transactionStatus && (\n                        <div\n                            className={`alert ${\n                                transactionStatus.successful ? 'alert-success' : 'alert-danger'\n                            }`}\n                            role=\"alert\"\n                        >\n                            {transactionStatus.message}\n                        </div>\n                    )}\n\n                    <p>Do you confirm your vote for proposal #{selectedProposalId} ?</p>\n                </Modal>\n            </section>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\n\nimport Header from '../sections/Header'\nimport Proposal from '../bloc/Proposal'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWeb3 from '../../hooks/useWeb3'\nimport useWallet from '../../hooks/useWallet'\n\nimport { getVoteStatusLabel } from '../../helpers/vote'\nimport { getHumanErrorMessage } from '../../helpers/Metamask'\n\nexport default function VotesTallying() {\n    const [transactionStatus, setTransactionStatus] = useState(null)\n\n    const { isOwner, voteStatus } = useVoteState()\n    const { addEventListener, computeVoteResult, onVoteStatusUpdate } = useWeb3()\n    const { account } = useWallet()\n\n    // Listen contract events :\n    // - \"WorkflowStatusChange\" : to update the vote status\n    useEffect(() => {\n        addEventListener('WorkflowStatusChange', onVoteStatusUpdate)\n    }, [])\n\n    const onComputeVoteResultClick = async () => {\n        computeVoteResult(account, (error) => {\n            const errorMessageToShow = getHumanErrorMessage(error)\n\n            const transactionStatus = {\n                successful: false,\n                message: errorMessageToShow,\n            }\n            setTransactionStatus(transactionStatus)\n        })\n    }\n\n    return (\n        <>\n            <Header />\n            <section className=\"content\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">{getVoteStatusLabel(voteStatus)}</h2>\n                    <h3>The result will be soon announced</h3>\n\n                    {transactionStatus && (\n                        <div className=\"alert alert-danger my-3\" role=\"alert\">\n                            {transactionStatus.message}\n                        </div>\n                    )}\n\n                    {isOwner && (\n                        <div className=\"btn-toolbar admin-toolbar\">\n                            <div className=\"btn-group me-2\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-success\"\n                                    onClick={onComputeVoteResultClick}\n                                >\n                                    Start votes tallying\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </section>\n        </>\n    )\n}\n","import PropTypes from 'prop-types'\n\nconst WinnerProposal = ({ description, voteCount = 0 }) => {\n    return (\n        <div className=\"col-lg-6 col-xxl-4 mb-5\">\n            <div className=\"card bg-light border-0 h-100\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center p-4 p-lg-5 pt-0 pt-lg-0\">\n                    <div className=\"feature bg-gradient text-white rounded-3 mb-4 mt-n4 bg-warning\">\n                        <i className=\"bi bi-trophy\"></i>\n                    </div>\n\n                    <h3>\n                        <b>Vote count</b>: {voteCount}\n                    </h3>\n\n                    <h4 className=\"fs-6\">\n                        <b>Description</b>: {description}\n                    </h4>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWinnerProposal.propTypes = {\n    description: PropTypes.string.isRequired,\n    voteCount: PropTypes.string.isRequired,\n}\n\nexport default WinnerProposal\n","import { useEffect } from 'react'\n\nimport Header from '../sections/Header'\nimport WinnerProposal from '../bloc/WinnerProposal'\n\nimport useVoteState from '../../hooks/useVoteState'\nimport useWeb3 from '../../hooks/useWeb3'\n\nimport { getVoteStatusLabel } from '../../helpers/vote'\n\nexport default function VoteResult() {\n    // Global state\n    const { voteStatus, winningProposal } = useVoteState()\n    const { fetchWinner } = useWeb3()\n\n    // Fetch winner\n    useEffect(() => {\n        fetchWinner()\n    }, [])\n\n    return (\n        <>\n            <Header />\n            <section className=\"content\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">{getVoteStatusLabel(voteStatus)}</h2>\n\n                    {winningProposal ? (\n                        <div className=\"row gx-lg-5 my-5 justify-content-center\">\n                            <WinnerProposal\n                                description={winningProposal.description}\n                                voteCount={winningProposal.voteCount}\n                            />\n                        </div>\n                    ) : (\n                        <h3 className=\"mb-5\">\n                            No winner ! There is an equality between vote counts.\n                        </h3>\n                    )}\n                </div>\n            </section>\n        </>\n    )\n}\n","import useVoteState from '../hooks/useVoteState'\n\nimport Layout from '../components/sections/Layout'\n\nimport VotersRegistration from '../components/vote-steps/VotersRegistration'\nimport ProposalsRegistration from '../components/vote-steps/ProposalsRegistration'\nimport VotingSession from '../components/vote-steps/VotingSession'\nimport VotesTallying from '../components/vote-steps/VotesTallying'\nimport VoteResult from '../components/vote-steps/VoteResult'\n\nexport default function Home() {\n    const { voteStatus } = useVoteState()\n\n    const contentMapping = {\n        0: <VotersRegistration />,\n        1: <ProposalsRegistration />,\n        2: <VotingSession />,\n        3: <VotingSession />,\n        4: <VotesTallying />,\n        5: <VoteResult />,\n    }\n\n    return <Layout>{contentMapping[voteStatus]}</Layout>\n}\n","import { useEffect } from 'react'\n\nimport useVoteState from '../hooks/useVoteState'\nimport useWeb3 from '../hooks/useWeb3'\n\nimport Layout from '../components/sections/Layout'\nimport Voter from '../components/bloc/Voter'\n\nexport default function Voters() {\n    const { whiteListedVoters } = useVoteState()\n    const { fetchVoters } = useWeb3()\n\n    // Fetch proposals\n    useEffect(() => {\n        fetchVoters()\n    }, [])\n\n    return (\n        <Layout>\n            <section className=\"content py-5\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">Voters</h2>\n\n                    <div className=\"row gx-lg-5 my-5\">\n                        {whiteListedVoters.length ? (\n                            whiteListedVoters.map((address, index) => (\n                                <Voter key={index.toString()} address={address} />\n                            ))\n                        ) : (\n                            <p className=\"text-center fs-3\">No voters yet.</p>\n                        )}\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    )\n}\n","import { useEffect } from 'react'\n\nimport useVoteState from '../hooks/useVoteState'\nimport useWeb3 from '../hooks/useWeb3'\n\nimport Layout from '../components/sections/Layout'\nimport Proposal from '../components/bloc/Proposal'\n\nexport default function Voters() {\n    const { proposals } = useVoteState()\n    const { fetchProposals } = useWeb3()\n\n    // Fetch proposals\n    useEffect(() => {\n        fetchProposals()\n    }, [])\n\n    return (\n        <Layout>\n            <section className=\"content py-5\">\n                <div className=\"container px-lg-5 text-center\">\n                    <h2 className=\"fw-bold\">Proposals</h2>\n\n                    <div className=\"row gx-lg-5 my-5\">\n                        {proposals.length ? (\n                            proposals.map((proposal, index) => (\n                                <Proposal\n                                    key={index.toString()}\n                                    proposalId={index}\n                                    description={proposal.description}\n                                    voteCount={proposal.voteCount}\n                                />\n                            ))\n                        ) : (\n                            <p className=\"text-center fs-3\">No proposal yet.</p>\n                        )}\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    )\n}\n","import { useEffect } from 'react'\nimport { HashRouter, Routes, Route } from 'react-router-dom'\n\nimport useWeb3 from './hooks/useWeb3'\nimport useWallet from './hooks/useWallet'\n\nimport Home from './pages/Home'\nimport Voters from './pages/Voters'\nimport Proposals from './pages/Proposals'\n\nconst App = () => {\n    const { fetchVoteStatus } = useWeb3()\n    const { onAccountChange } = useWallet()\n\n    // Fetch required state\n    useEffect(() => {\n        fetchVoteStatus()\n    }, [])\n\n    // Handle chain change\n    useEffect(() => {\n        const onChainChange = () => {\n            // Metamask doc: \"We recommend reloading the page, unless you must do otherwise\"\n            window.location.reload()\n        }\n\n        window.ethereum.on('chainChanged', onChainChange)\n\n        // remove listener when the component is unmounted\n        return () => {\n            window.ethereum.removeListener('chainChanged', onChainChange)\n        }\n    }, []) // Only execute on component mount\n\n    // Handle account change\n    useEffect(() => {\n        window.ethereum.on('accountsChanged', onAccountChange)\n\n        return () => {\n            window.ethereum.accountsChanged('accountsChanged', onAccountChange)\n        }\n    }, [])\n\n    return (\n        <HashRouter>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/voters\" element={<Voters />} />\n                <Route path=\"/proposals\" element={<Proposals />} />\n            </Routes>\n        </HashRouter>\n    )\n}\n\nexport default App\n","export default function Loading() {\n    return (\n        <div className=\"h-100 d-flex align-items-center justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>\n        </div>\n    )\n}\n","import React, { Suspense } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ErrorBoundary } from 'react-error-boundary'\n\nimport { Provider } from 'jotai'\n\nimport 'bootstrap-icons/font/bootstrap-icons.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './theme/index.css'\nimport './theme/animation.css'\n\nimport Warning from './components/Warning'\n\nimport App from './App'\nimport Loading from './components/Loading'\n\nReactDOM.render(\n    <Provider>\n        <Suspense fallback={<Loading />}>\n            <ErrorBoundary FallbackComponent={Warning}>\n                <App />\n            </ErrorBoundary>\n        </Suspense>\n    </Provider>,\n    document.getElementById('root'),\n)\n","export default function Warning() {\n    return (\n        <div className=\"h-100 d-flex flex-column align-items-center justify-content-center\">\n            <h1>Service unavailable</h1>\n            <p>Please select Ropsten or your local node and reload the page.</p>\n            <button className=\"btn btn-primary \" onClick={() => window.location.reload()}>\n                Refresh Page\n            </button>\n        </div>\n    )\n}\n"],"sourceRoot":""}